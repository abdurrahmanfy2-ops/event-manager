{
  "openapi": "3.0.0",
  "info": {
    "title": "Campus Event Hub API",
    "version": "1.0.0",
    "description": "Campus Event Hub backend API for managing events, clubs, colleges, and users"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "https://api.campuseventhub.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@university.edu"
          },
          "role": {
            "type": "string",
            "enum": ["student", "admin"],
            "example": "student"
          },
          "points": {
            "type": "number",
            "example": 150
          },
          "achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          },
          "joinedClubs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          },
          "attendingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          }
        }
      },
      "College": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "State University"
          },
          "location": {
            "type": "string",
            "example": "New York, NY"
          },
          "description": {
            "type": "string",
            "example": "A premier institution for higher education"
          },
          "clubs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          }
        }
      },
      "Club": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tech Club"
          },
          "description": {
            "type": "string",
            "example": "Club for technology enthusiasts"
          },
          "college": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Spring Tech Conference 2025"
          },
          "description": {
            "type": "string",
            "example": "Annual technology conference featuring guest speakers"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-25T14:00:00.000Z"
          },
          "venue": {
            "type": "string",
            "example": "Main Auditorium"
          },
          "club": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            }
          },
          "capacity": {
            "type": "integer",
            "example": 200
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/images/event.jpg"
          }
        }
      },
      "Partner": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "TechCorp Inc"
          },
          "type": {
            "type": "string",
            "enum": ["sponsor", "vendor", "school", "community"],
            "example": "sponsor"
          },
          "contact": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "example": "contact@techcorp.com"
              },
              "phone": {
                "type": "string",
                "example": "+1-555-0123"
              }
            }
          }
        }
      },
      "Achievement": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "first_event_join"
          },
          "title": {
            "type": "string",
            "example": "First Event Attendee"
          },
          "description": {
            "type": "string",
            "example": "Joined your first college event"
          },
          "points": {
            "type": "number",
            "example": 15
          }
        }
      },
      "ObjectId": {
        "type": "string",
        "description": "MongoDB ObjectId",
        "example": "60f5b2b5c8f7b3c2b8d3e4f5"
      },
      "AuthTokens": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "DashboardStats": {
        "type": "object",
        "properties": {
          "activeUsers": {
            "type": "number",
            "example": 24
          },
          "eventsThisWeek": {
            "type": "number",
            "example": 5
          },
          "partnerUniversities": {
            "type": "number",
            "example": 8
          },
          "engagementRate": {
            "type": "number",
            "example": 67.85
          },
          "monthlyAttendanceTrend": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [5, 8, 12, 15, 20, 18, 22, 25, 30, 28, 35, 32]
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register new user",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["first_name", "last_name", "email", "password"],
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@university.edu"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["student", "admin"],
                    "example": "student"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokens"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@university.edu"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokens"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get current user profile",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Get current user profile",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update current user profile",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe Updated"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@university.edu"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/clubs": {
      "get": {
        "summary": "Get all clubs",
        "tags": ["Clubs"],
        "security": [],
        "parameters": [
          {
            "name": "college",
            "in": "query",
            "description": "Filter by college ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by club name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of clubs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clubs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Club"
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new club (admin only)",
        "tags": ["Clubs"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "college"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Tech Club"
                  },
                  "description": {
                    "type": "string",
                    "example": "Club for technology enthusiasts"
                  },
                  "college": {
                    "type": "string",
                    "description": "College ObjectId",
                    "example": "60f5b2b5c8f7b3c2b8d3e4f5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Club created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "club": {
                      "$ref": "#/components/schemas/Club"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/clubs/{id}": {
      "get": {
        "summary": "Get club by ID",
        "tags": ["Clubs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Club ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Club details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "club": {
                      "$ref": "#/components/schemas/Club"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update club (admin only)",
        "tags": ["Clubs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Club ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Club"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Club updated successfully"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Club ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "summary": "Join club",
        "tags": ["Clubs"],
        "responses": {
          "200": {
            "description": "Joined club successfully"
          }
        }
      }
    },
    "/api/clubs/{id}/join": {
      "post": {
        "summary": "Join club",
        "tags": ["Clubs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Club ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Joined club successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "club": {
                      "$ref": "#/components/schemas/Club"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/clubs/{id}/leave": {
      "post": {
        "summary": "Leave club",
        "tags": ["Clubs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Club ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Left club successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "club": {
                      "$ref": "#/components/schemas/Club"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/colleges": {
      "get": {
        "summary": "Get all colleges",
        "tags": ["Colleges"],
        "security": [],
        "responses": {
          "200": {
            "description": "List of colleges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "colleges": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/College"
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new college (admin only)",
        "tags": ["Colleges"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/College"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "College created successfully"
          }
        }
      }
    },
    "/api/partners": {
      "get": {
        "summary": "Get all partners",
        "tags": ["Partners"],
        "security": [],
        "responses": {
          "200": {
            "description": "List of partners",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "partners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new partner (admin only)",
        "tags": ["Partners"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Partner created successfully"
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "summary": "Get all events",
        "tags": ["Events"],
        "security": [],
        "parameters": [
          {
            "name": "club",
            "in": "query",
            "description": "Filter by club ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in title/description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new event (club members only)",
        "tags": ["Events"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "date", "venue", "club", "capacity"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Spring Tech Conference"
                  },
                  "description": {
                    "type": "string",
                    "example": "Annual technology conference"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-25T14:00:00.000Z"
                  },
                  "venue": {
                    "type": "string",
                    "example": "Main Auditorium"
                  },
                  "club": {
                    "type": "string",
                    "description": "Club ObjectId",
                    "example": "60f5b2b5c8f7b3c2b8d3e4f5"
                  },
                  "capacity": {
                    "type": "number",
                    "example": 200
                  },
                  "imageUrl": {
                    "type": "string",
                    "example": "https://example.com/images/event.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully"
          }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "summary": "Get event by ID",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update event (club creators only)",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete event (admin only)",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully"
          }
        }
      }
    },
    "/api/events/{id}/join": {
      "post": {
        "summary": "Join event",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Joined event successfully"
          }
        }
      }
    },
    "/api/events/{id}/leave": {
      "post": {
        "summary": "Leave event",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Left event successfully"
          }
        }
      }
    },
    "/api/achievements": {
      "get": {
        "summary": "Get all achievements",
        "tags": ["Achievements"],
        "security": [],
        "responses": {
          "200": {
            "description": "List of achievements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "achievements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Achievement"
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Award achievement (admin only)",
        "tags": ["Achievements"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["achievementId", "userId"],
                "properties": {
                  "achievementId": {
                    "type": "string",
                    "description": "Achievement ObjectId"
                  },
                  "userId": {
                    "type": "string",
                    "description": "User ObjectId"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Achievement awarded successfully"
          }
        }
      }
    },
    "/api/dashboard/stats": {
      "get": {
        "summary": "Get dashboard statistics (admin only)",
        "tags": ["Dashboard"],
        "responses": {
          "200": {
            "description": "Dashboard statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardStats"
                }
              }
            }
          }
        }
      }
    }
  }
}
